// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRS.Models;

namespace TRS.Migrations
{
    [DbContext(typeof(TRSContext))]
    [Migration("20211220163824_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TRS.Models.AcceptedTime", b =>
                {
                    b.Property<int>("AcceptedTimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("varchar(767)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("AcceptedTimeID");

                    b.HasIndex("ProjectCode");

                    b.HasIndex("ReportID");

                    b.ToTable("AcceptedTime");
                });

            modelBuilder.Entity("TRS.Models.ActivityEntry", b =>
                {
                    b.Property<int>("ActivityEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<string>("Subcode")
                        .HasColumnType("text");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("ActivityEntryID");

                    b.HasIndex("Code");

                    b.HasIndex("ReportID");

                    b.ToTable("ActivityEntry");
                });

            modelBuilder.Entity("TRS.Models.Project", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(767)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Budget")
                        .HasColumnType("int");

                    b.Property<string>("Manager")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("TRS.Models.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Frozen")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("ReportID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("TRS.Models.Subactivity", b =>
                {
                    b.Property<int>("SubactivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("varchar(767)");

                    b.HasKey("SubactivityID");

                    b.HasIndex("ProjectCode");

                    b.ToTable("Subactivity");
                });

            modelBuilder.Entity("TRS.Models.AcceptedTime", b =>
                {
                    b.HasOne("TRS.Models.Project", "Project")
                        .WithMany("AcceptedTimes")
                        .HasForeignKey("ProjectCode");

                    b.HasOne("TRS.Models.Report", "Report")
                        .WithMany("Accepted")
                        .HasForeignKey("ReportID");
                });

            modelBuilder.Entity("TRS.Models.ActivityEntry", b =>
                {
                    b.HasOne("TRS.Models.Project", "Project")
                        .WithMany("Activities")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRS.Models.Report", "Report")
                        .WithMany("Activities")
                        .HasForeignKey("ReportID");
                });

            modelBuilder.Entity("TRS.Models.Subactivity", b =>
                {
                    b.HasOne("TRS.Models.Project", "Project")
                        .WithMany("Subactivities")
                        .HasForeignKey("ProjectCode");
                });
#pragma warning restore 612, 618
        }
    }
}
